<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/Assets/Scripts/Calendar/CalendarEvents.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Assets/Scripts/Calendar/CalendarEvents.cs" />
              <option name="originalContent" value="using System.Collections.Generic;&#10;using UnityEngine;&#10;&#10;namespace Calendar&#10;{&#10;    [CreateAssetMenu(fileName = &quot;CalendarEvents&quot;, menuName = &quot;Scriptable Objects/CalendarEvents&quot;)]&#10;    public class CalendarEvents : ScriptableObject&#10;    {&#10;        public List&lt;DayEventType&gt; calendarDayEvents = new List&lt;DayEventType&gt;();&#10;        &#10;        [Header(&quot;Common Holidays&quot;)]&#10;        public List&lt;DayEventType&gt; commonHolidays = new List&lt;DayEventType&gt;();&#10;&#10;        /// &lt;summary&gt;&#10;        /// Add a custom event to the calendar&#10;        /// &lt;/summary&gt;&#10;        public void AddEvent(DayEventType eventType)&#10;        {&#10;            if (!calendarDayEvents.Contains(eventType))&#10;            {&#10;                calendarDayEvents.Add(eventType);&#10;            }&#10;        }&#10;        &#10;        /// &lt;summary&gt;&#10;        /// Remove an event from the calendar&#10;        /// &lt;/summary&gt;&#10;        public void RemoveEvent(DayEventType eventType)&#10;        {&#10;            calendarDayEvents.Remove(eventType);&#10;        }&#10;&#10;        /// &lt;summary&gt;&#10;        /// Get all events (custom and common holidays) occurring on the specified date&#10;        /// &lt;/summary&gt;&#10;        public List&lt;DayEventType&gt; GetEventsOnDate(System.DateTime date)&#10;        {&#10;            List&lt;DayEventType&gt; events = new List&lt;DayEventType&gt;();&#10;            foreach (var evt in calendarDayEvents)&#10;            {&#10;                if (evt.OccursOnDate(date))&#10;                    events.Add(evt);&#10;            }&#10;            foreach (var hol in commonHolidays)&#10;            {&#10;                if (hol.OccursOnDate(date))&#10;                    events.Add(hol);&#10;            }&#10;            return events;&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="using System.Collections.Generic;&#10;using UnityEngine;&#10;&#10;namespace Calendar&#10;{&#10;    [CreateAssetMenu(fileName = &quot;CalendarEvents&quot;, menuName = &quot;Scriptable Objects/CalendarEvents&quot;)]&#10;    public class CalendarEvents : ScriptableObject&#10;    {&#10;        public List&lt;DayEventType&gt; calendarDayEvents = new List&lt;DayEventType&gt;();&#10;        &#10;        [Header(&quot;Common Holidays&quot;)]&#10;        public List&lt;DayEventType&gt; commonHolidays = new List&lt;DayEventType&gt;();&#10;&#10;        /// &lt;summary&gt;&#10;        /// Add a custom event to the calendar&#10;        /// &lt;/summary&gt;&#10;        public void AddEvent(DayEventType eventType)&#10;        {&#10;            if (!calendarDayEvents.Contains(eventType))&#10;            {&#10;                calendarDayEvents.Add(eventType);&#10;            }&#10;        }&#10;        &#10;        /// &lt;summary&gt;&#10;        /// Remove an event from the calendar&#10;        /// &lt;/summary&gt;&#10;        public void RemoveEvent(DayEventType eventType)&#10;        {&#10;            calendarDayEvents.Remove(eventType);&#10;        }&#10;&#10;        /// &lt;summary&gt;&#10;        /// Get all events (custom and common holidays) occurring on the specified date&#10;        /// &lt;/summary&gt;&#10;        public List&lt;DayEventType&gt; GetEventsOnDate(System.DateTime date)&#10;        {&#10;            List&lt;DayEventType&gt; events = new List&lt;DayEventType&gt;();&#10;            foreach (var evt in calendarDayEvents)&#10;            {&#10;                if (evt.OccursOnDate(date))&#10;                    events.Add(evt);&#10;            }&#10;            foreach (var hol in commonHolidays)&#10;            {&#10;                if (hol.OccursOnDate(date))&#10;                    events.Add(hol);&#10;            }&#10;            return events;&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>